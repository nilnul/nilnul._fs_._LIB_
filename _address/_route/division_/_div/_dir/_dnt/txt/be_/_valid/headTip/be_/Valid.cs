namespace nilnul.fs._address._dst.denote.be_._valid.headTip.be_
{
	static public class _ValidX
	{
		static public bool Be(char c)
		{
			return !(
				nilnul.character_.cha.be_.Line0Return.Singleton.be(c)
				||
				char.IsControl(c) /*The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters. According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.
				but @"æ¯ä¸è®ºææå
³èµæï¼å¼ éªå¦ï¼", aka: "æ¯\u0095ä¸\u009aè®ºæ\u0096\u0087æ\u009c\u0089å\u0085³èµ\u0084æ\u0096\u0099ï¼\u0088å¼ é\u009bªå¦\u008dï¼\u0089" is valid. note \u0089 is invisible and can be generated by unzip software.
				 */
			);

		}
	}
}
